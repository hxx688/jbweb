package com.rrgy.exchange.service.impl;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Service;

import com.rrgy.core.base.service.BaseService;
import com.rrgy.core.plugins.dao.Blade;
import com.rrgy.core.plugins.dao.Md;
import com.rrgy.core.toolbox.Paras;
import com.rrgy.core.toolbox.kit.MathKit;
import com.rrgy.exchange.model.ExchangeOrder;
import com.rrgy.exchange.model.ExchangeOrderAddress;
import com.rrgy.exchange.model.ExchangeOrderDetail;
import com.rrgy.exchange.service.ExchangeOrderService;
import com.rrgy.person.model.Person;
import com.rrgy.person.model.PersonPointLog;

/**
 * Generated by Blade.
 * 2017-03-10 14:48:55
 */
@Service
public class ExchangeOrderServiceImpl extends BaseService<ExchangeOrder> implements ExchangeOrderService{

	@Override
	public boolean updateStatus(String ids, Object status) {
		Paras paras = Paras.create().set("status", status).set("ids", ids.split(","));
		boolean temp = updateBy("status = #{status}", "id in (#{join(ids)})", paras);
		return temp;
	}

	@Override
	@SuppressWarnings("unchecked")
	public Map<String, Object> findOne(Object id) {
		return Md.selectUnique("exchangeOrder.findOne", Paras.create().set("id", id), Map.class);
	}

	@Override
	public int addOrder(ExchangeOrder eo) throws Exception {
		
		//判断用户积分
		Person p = Blade.create(Person.class).findById(eo.getOrder_user_id());
		BigDecimal point = p.getPoint();
		BigDecimal totalAmount = eo.getOrder_total_amount();
		
		//如果用户积分大于等于订单总积分，进行下单操作
		if(point.compareTo(totalAmount) == 0 || point.compareTo(totalAmount) == 1){
			//新增订单
			int order_id = this.saveRtId(eo);
			//插入积分记录
			PersonPointLog ppl = new PersonPointLog();
			ppl.setAdd_time(new Date());
			ppl.setIsadd(2);
			ppl.setLeixing(p.getGroup_id());
			ppl.setUser_id(p.getId());
			ppl.setValue(totalAmount);
			Blade.create(PersonPointLog.class).save(ppl);
			//更新用户积分
			point = MathKit.sub(point, totalAmount);
			Blade.create(Person.class).updateBy("point = #{point}", "id = #{id}", 
					Paras.create().set("point", point).set("id", p.getId()));
			ExchangeOrderAddress orderAddress = eo.getOrderAddress();
			orderAddress.setOrder_id(order_id);
			//插入订单地址信息
			Blade.create(ExchangeOrderAddress.class).save(orderAddress);
			//插入订单明细
			List<ExchangeOrderDetail> orderDetailList = eo.getOrderDetailList();
			for (ExchangeOrderDetail exchangeOrderDetail : orderDetailList) {
				exchangeOrderDetail.setOrder_id(order_id);
				Blade.create(ExchangeOrderDetail.class).save(exchangeOrderDetail);
			}
		}else{
			return 2;
		}
		return 1;
	}

}
