package com.lfgj.tixian.service.impl;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.springframework.stereotype.Service;

import com.lfgj.financial.model.Financial;
import com.lfgj.member.model.Member;
import com.lfgj.tixian.model.Tixianjilu;
import com.lfgj.tixian.model.Yinhangka;
import com.lfgj.tixian.service.TixianjiluService;
import com.lfgj.tixian.util.PayUtil;
import com.lfgj.util.CommKit;
import com.lfgj.util.LfConstant;
import com.rrgy.common.vo.ShiroUser;
import com.rrgy.core.base.service.BaseService;
import com.rrgy.core.constant.ConstConfig;
import com.rrgy.core.plugins.dao.Blade;
import com.rrgy.core.plugins.dao.Md;
import com.rrgy.core.toolbox.Func;
import com.rrgy.core.toolbox.Paras;
import com.rrgy.core.toolbox.kit.DateTimeKit;
import com.rrgy.core.toolbox.kit.JsonKit;
import com.rrgy.core.toolbox.kit.MathKit;
import com.rrgy.system.model.Parameter;

/**
 * Generated by Blade.
 * 2017-01-09 15:38:45
 */
@Service
public class TixianjiluServiceImpl extends BaseService<Tixianjilu> implements TixianjiluService{

	@Override
	public boolean updateStatus(String ids, Object status) {
		Paras paras = Paras.create().set("status", status).set("ids", ids.split(","));
		boolean temp = updateBy("status = #{status}", "id in (#{join(ids)})", paras);
		return temp;
	}

	@Override
	@SuppressWarnings("unchecked")
	public Map<String, Object> findOne(Object id) {
		return Md.selectUnique("tixianjilu.findOne", Paras.create().set("id", id), Map.class);
	}

	@Override
	public synchronized String auditTixian(ShiroUser user, Tixianjilu tixianjilu) throws Exception {
		Blade blade = Blade.create(Tixianjilu.class);
		Tixianjilu txjl = blade.findById(tixianjilu.getId());
		if(txjl.getStatus() == 1||txjl.getStatus() == 6){
			//审核通过，打款
			if(tixianjilu.getStatus() == 2){
				tixianjilu.setDakuan_time(DateTimeKit.date());
			}else if(tixianjilu.getStatus() == 5){
				tixianjilu.setDakuan_time(DateTimeKit.date());
				String msg = transfer(txjl);
				if(!Func.isEmpty(msg)){
					System.out.println(txjl.getTixianNum()+":"+msg);
					return msg;
				}
			}else{
				//如果是退回，把天使豆退回到申请人中
				Member p = Blade.create(Member.class).findById(txjl.getUserId());
				BigDecimal amount = MathKit.add(p.getAmount(), txjl.getShijiamount());
				Member person = new Member();
				person.setId(p.getId());
				person.setAmount(amount);
				BigDecimal withdraw = MathKit.sub(p.getWithdraw(), txjl.getShijiamount());
				if(withdraw.floatValue()<0){
					withdraw = BigDecimal.ZERO;
				}
				person.setWithdraw(withdraw);
				
				Blade.create(Member.class).update(person);
				
				Financial financial = new Financial();
				financial.setFinancial_type(LfConstant.FINANCIAL_TYPE_SR);
				financial.setOrderNo(txjl.getTixianNum());
				financial.setUser_id(txjl.getUserId());
				financial.setPhone(p.getMobile());
				financial.setUser_name(p.getReal_name());
				financial.setAmount(new BigDecimal(txjl.getShijiamount()));
				financial.setCreate_time(new Date());
				financial.setDesc("提现退回");
				financial.setSource_type(LfConstant.Source.F.value);
				financial.setUser_amount(person.getAmount());
				boolean rs = Blade.create(Financial.class).save(financial);
				if(!rs){
					throw new RuntimeException("明细数据失败");
				}
			}
			blade.update(tixianjilu);
		}else{
			return "2";
		}
		
		return "1";
	}

	public String transfer(Tixianjilu tixianjilu){
		Member m = Blade.create(Member.class).findById(tixianjilu.getUserId());
		
		Map<String, Object> dataMap = new HashMap<String, Object>();
		dataMap.put("AccountName", tixianjilu.getKaihuming());
		dataMap.put("BankCardNo", tixianjilu.getKahao());
		dataMap.put("Tel", tixianjilu.getKahumobile());
		dataMap.put("IDCardNo", m.getIdcart());
		dataMap.put("Province", tixianjilu.getSheng());
		dataMap.put("City", tixianjilu.getShi());
		dataMap.put("BankName", tixianjilu.getKaihuhang()+"-"+tixianjilu.getZhihang());
		Object settlementId = PayUtil.search(tixianjilu.getKahao());
		if(settlementId==null){
			settlementId = PayUtil.get(dataMap);
		}
		
		dataMap = new HashMap<String, Object>();
		BigDecimal amount = tixianjilu.getAmount().add(tixianjilu.getShui())
					.multiply(new BigDecimal(100)).setScale(0);
		dataMap.put("Amount", amount.toString());
		dataMap.put("SettlementId", settlementId);
		dataMap.put("OrderNumber", tixianjilu.getTixianNum());
		String domain = ConstConfig.pool.get("config.domain");
		dataMap.put("InvokeUrl", domain + "/tixianjilu/notify_transfer");
		System.out.println("付款："+JsonKit.toJson(dataMap));
		Object msg = PayUtil.transfer(dataMap);
		return msg.toString();
	}
	
	public boolean saveTixain(Member per,String amount,Tixianjilu 提现,String ka_id){
		
		Member person = Blade.create(Member.class).findById(per.getId());

		Parameter param = new Parameter();
		param.setCode(LfConstant.PARAM_107);
		param.setStatus(1);
		param = Blade.create(Parameter.class).findTopOne(param);
		
		Parameter param1 = CommKit.getParameter("203");
		
		if(person.getAmount().floatValue()<Float.valueOf(amount)){
			return false;
		}
		
		Yinhangka yinghanka = new Yinhangka();
		yinghanka.setUserid(person.getId());
		yinghanka.setStatus(0);
		yinghanka.setKahao(per.getBank_acount());
		yinghanka.setKaihuhang(per.getBank_name());
		if(Func.isEmpty(person.getKaihuming())){
			yinghanka.setKaihuming(person.getReal_name());
		}else{
			yinghanka.setKaihuming(person.getKaihuming());
		}
		yinghanka.setMobile(per.getBank_mobile());
		yinghanka.setSheng(提现.getSheng());
		yinghanka.setShi(提现.getShi());
		yinghanka.setXiangxindizhi(提现.getZhihang());
		boolean rs = false;
		if(Func.isEmpty(ka_id)){
			rs = Blade.create(Yinhangka.class).save(yinghanka);
		}else{
			yinghanka.setId(Integer.valueOf(ka_id));
			rs = Blade.create(Yinhangka.class).update(yinghanka);
		}
		
		if(!rs){
			throw new RuntimeException("银行卡信息录入失败");
		}
		
		Tixianjilu tixian = new Tixianjilu();
		tixian.setTixianNum(Func.orderNo("T"));
		tixian.setStatus(1);
		tixian.setShijiamount(amount);
		tixian.setUserId(person.getId());	
		
		if(Func.isEmpty(param1.getPara())){
			tixian.setShui(BigDecimal.ZERO);
		}else{
			tixian.setShui(new BigDecimal(param1.getPara()));
		}
		
		tixian.setAdd_time(new Date());
		BigDecimal payfee = new BigDecimal(amount).multiply(new BigDecimal(param.getPara()))
				.setScale(2,BigDecimal.ROUND_HALF_UP);
		tixian.setShouxufei(payfee);
		BigDecimal realAmount = new BigDecimal(amount).subtract(payfee);
		tixian.setAmount(realAmount);
		
		tixian.setKahao(yinghanka.getKahao());
		tixian.setKaihuhang(yinghanka.getKaihuhang());
		tixian.setKaihuming(yinghanka.getKaihuming());
		tixian.setKahumobile(yinghanka.getMobile());
		tixian.setSheng(yinghanka.getSheng());
		tixian.setShi(yinghanka.getShi());
		tixian.setTrade_no(per.getIdcart());
		tixian.setZhihang(yinghanka.getXiangxindizhi());
		
		rs = save(tixian);
				
		Financial financial = new Financial();
		financial.setFinancial_type(LfConstant.FINANCIAL_TYPE_ZC);
		financial.setOrderNo(tixian.getTixianNum());
		financial.setUser_id(person.getId());
		financial.setPhone(person.getMobile());
		financial.setUser_name(person.getReal_name());
		financial.setAmount(new BigDecimal(amount));
		financial.setCreate_time(new Date());
		financial.setDesc("提现");
		financial.setSource_type(LfConstant.Source.E.value);
		
		BigDecimal remainAmount = person.getAmount().subtract(financial.getAmount());		
		financial.setUser_amount(remainAmount);
		
		rs = Blade.create(Financial.class).save(financial);
		if(!rs){
			throw new RuntimeException("明细数据失败");
		}
		
		Member p = new Member();
		p.setId(person.getId());
		BigDecimal totalWithdraw = financial.getAmount().add(person.getWithdraw());
		p.setWithdraw(totalWithdraw);		
		p.setAmount(remainAmount);
		
		rs = Blade.create(Member.class).update(p);
		if(!rs){
			throw new RuntimeException("会员更新数据失败");
		}
		
		return rs;
	}
	
	public boolean updateByNum(Tixianjilu tixian){
		if(Func.isEmpty(tixian.getTixianNum())){
			return false;
		}
		Paras para = Paras.create().set("trade_no", tixian.getTrade_no()).set("fangshi", tixian.getFangshi())
				.set("yuanyin", tixian.getYuanyin()).set("tixianNum", tixian.getTixianNum()).set("status",2);
		boolean rs = Blade.create(Tixianjilu.class).updateBy(" trade_no=#{trade_no},fangshi=#{fangshi},yuanyin=#{yuanyin},status=#{status} ", "tixianNum=#{tixianNum}", para);
		return rs;
	}
}
